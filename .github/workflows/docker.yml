name: Docker

on:
  push:
    branches: [ "master" ]
  pull_request:
      branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: latest

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64, linux/arm64

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-command: ["", "--fancy", "--tex-template", "--output-format=epub"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Tests
      run: |
        docker run -it -v $(pwd)/examples:/build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ matrix.build-command }}

  push:
    needs: [build, test]
    # if: ${{ github.ref }}  == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Pull Docker image from GHCR
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Tag and push Docker image to GHCR (final)
        run: |
          docker tag  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
